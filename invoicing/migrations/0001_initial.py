# Generated by Django 2.1.4 on 2019-04-02 04:09

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CreditNoteLine',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('billing_address', models.TextField(blank=True, default='')),
                ('banking_details', models.TextField(blank=True, default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpenseLineComponent',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('quotation', 'Quotation'), ('proforma', 'Proforma Invoice'), (
                    'invoice', 'Invoice'), ('paid', 'Paid In Full'), ('paid-partially', 'Paid Partially')], max_length=16)),
                ('invoice_number', models.PositiveIntegerField(null=True)),
                ('quotation_number', models.PositiveIntegerField(null=True)),
                ('quotation_date', models.DateField(blank=True, null=True)),
                ('quotation_valid', models.DateField(blank=True, null=True)),
                ('draft', models.BooleanField(blank=True, default=True)),
                ('due', models.DateField(default=datetime.date.today)),
                ('date', models.DateField(default=datetime.date.today)),
                ('terms', models.CharField(blank=True, max_length=128)),
                ('comments', models.TextField(blank=True)),
                ('purchase_order_number', models.CharField(
                    blank=True, max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('line_type', models.PositiveSmallIntegerField(
                    choices=[(1, 'product'), (2, 'service'), (3, 'expense')])),
                ('discount', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date', models.DateField()),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('transfer', 'Transfer'), (
                    'debit card', 'Debit Card'), ('ecocash', 'EcoCash')], default='transfer', max_length=32)),
                ('reference_number', models.AutoField(
                    primary_key=True, serialize=False)),
                ('comments', models.TextField(default='Thank you for your business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLineComponent',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('returned', models.BooleanField(default=False)),
                ('unit_price', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
                ('value', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
                ('quantity', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
            ],
        ),
        migrations.CreateModel(
            name='SalesConfig',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('default_invoice_comments', models.TextField(blank=True)),
                ('default_quotation_comments', models.TextField(blank=True)),
                ('default_credit_note_comments', models.TextField(blank=True)),
                ('default_terms', models.TextField(blank=True)),
                ('include_shipping_address', models.BooleanField(default=False)),
                ('include_tax_in_invoice', models.BooleanField(default=True)),
                ('include_units_in_sales_invoice',
                 models.BooleanField(default=True)),
                ('next_invoice_number', models.IntegerField(default=1)),
                ('next_quotation_number', models.IntegerField(default=1)),
                ('use_sales_invoice', models.BooleanField(default=True)),
                ('use_service_invoice', models.BooleanField(default=True)),
                ('use_bill_invoice', models.BooleanField(default=True)),
                ('use_combined_invoice', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesRepresentative',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('number', models.AutoField(primary_key=True, serialize=False)),
                ('can_reverse_invoices', models.BooleanField(default=True)),
                ('can_offer_discounts', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceLineComponent',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
                ('flat_fee', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
                ('hourly_rate', models.DecimalField(
                    decimal_places=2, default=0.0, max_digits=9)),
            ],
        ),
    ]
